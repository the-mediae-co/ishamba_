# Generated by Django 4.1.9 on 2023-09-26 19:09

import hashlib
from django.db import migrations

from core.utils.models import queryset_iterator


def hash_phone_numbers(apps, schema_editor):
    CustomerPhone = apps.get_model('customers', 'customerphone')
    Customer = apps.get_model('customers', 'customer')
    for chunk in queryset_iterator(CustomerPhone.objects.filter(gdpr_hash__isnull=True)):
        updated_phones = []
        updated_customers = []
        for phone in chunk:
            phone.gdpr_hash = hashlib.sha256(bytes(str(phone.number), encoding='utf-8')).hexdigest()
            if phone.is_main:
                customer = phone.customer
                customer.phone_number_hash = phone.gdpr_hash
                updated_customers.append(customer)
            updated_phones.append(phone)
        CustomerPhone.objects.bulk_update(updated_phones, fields=['gdpr_hash'])
        Customer.objects.bulk_update(updated_customers, fields=['phone_number_hash'])


class Migration(migrations.Migration):

    dependencies = [
        ('customers', '0121_customerphone_gdpr_hash'),
    ]

    operations = [
        migrations.RunPython(hash_phone_numbers, reverse_code=migrations.RunPython.noop)
    ]
