# Generated by Django 4.1.9 on 2024-03-14 11:57

from django.db import migrations, models
import django.db.models.deletion

from core.utils.models import queryset_iterator


def populate_customer_commodities(apps, schema_editor):
    Customer = apps.get_model('customers', 'customer')
    CustomerCommodity = apps.get_model('customers', 'customercommodity')
    for chunk in queryset_iterator(Customer.objects.prefetch_related('commodities').filter(commodities__isnull=False)):
        to_create = []
        for customer in chunk:
            to_create.extend(
                [
                    CustomerCommodity(
                        commodity_id=commodity.id,
                        customer_id=customer.id
                    ) for commodity in customer.commodities.all()
                ]
            )
        CustomerCommodity.objects.bulk_create(to_create)


class Migration(migrations.Migration):

    dependencies = [
        ('agri', '0025_delete_agritipsentsms'),
        ('customers', '0127_merge_ssu_heard_about_us_options'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomerCommodity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('creator_id', models.IntegerField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('last_editor_id', models.IntegerField(blank=True, null=True)),
                ('primary', models.BooleanField(default=False)),
                ('commodity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customer_commodities', to='agri.commodity')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customer_commodities', to='customers.customer')),
            ],
            options={
                'unique_together': {('customer', 'commodity')},
            },
        ),
        migrations.RunPython(populate_customer_commodities, migrations.RunPython.noop),
    ]
