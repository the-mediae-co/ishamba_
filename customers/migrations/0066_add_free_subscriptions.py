# -*- coding: utf-8 -*-
# Generated by Django 1.9.8 on 2016-09-29 09:44


from django.conf import settings
from django.db import migrations

from core.utils.functional import grouper


def add_free_subscriptions(apps, schema_editor):
    Customer = apps.get_model('customers', 'Customer')
    Subscription = apps.get_model('customers', 'Subscription')
    SubscriptionType = apps.get_model('customers', 'SubscriptionType')

    # Just in case the default subscription does not exist
    sub_type, created = SubscriptionType.objects.get_or_create(
        name='Free',
        defaults=settings.CUSTOMERS_SUBSCRIPTION_DEFAULTS,
    )

    # Clean out all existing subscriptions
    Subscription.objects.all().delete()

    customers = Customer.objects.exclude(subscriptions__type=sub_type).values_list('pk', flat=True)

    for group in grouper(customers.iterator(), n=1000):
        subscriptions = []
        for customer_pk in group:
            if customer_pk is None:
                continue
            subscriptions.append(Subscription(customer_id=customer_pk, type=sub_type))
        Subscription.objects.bulk_create(subscriptions)


def remove_free_subscriptions(apps, schema_editor):
    Subscription = apps.get_model('customers', 'Subscription')
    Subscription.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ('customers', '0065_auto_20160923_1404'),
    ]

    operations = [
        migrations.RunPython(add_free_subscriptions, remove_free_subscriptions)
    ]
