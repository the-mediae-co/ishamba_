# -*- coding: utf-8 -*-
# Generated by Django 1.9.11 on 2017-03-02 13:27

from datetime import timedelta

from django.db import migrations


#    1: [Nyandarua, Nyeri, Kirinyaga, Murang'a, Kiambu], # Central Region
#    2: [Mombasa, Kwale, Kilifi, Tana River, Lamu, Taita-Taveta], # Coastal Region
#    3: [Turkana, West Pokot, Samburu, Trans Nzoia, Uasin Gishu, Elgeyo Marakwet, Nandi, Baringo, Laikipia, Nakuru, Narok, Kajiado, Kericho, Bomet], # RiftValley Region
#    4: [Siaya, Kisumu, Homa Bay, Migori, Kisii, Nyamira], # Western: Nyanza Region
#    5: [Kakamega, Vihiga, Bungoma, Busia], # Western: Western Region
#    6: [Garissa, Wajir, Mandera], # North Eastern Region
#    7: [Marsabit, Isiolo, Meru, Tharaka Nithi, Embu, Kitui, Machakos, Makueni], # Eastern Region

REGIONS_TO_COUNTIES = {
    8: [None],
    7: [45, 1, 39, 42, 24, 47, 26, 10],
    6: [8, 28, 4],
    5: [5, 31, 14, 36],
    4: [46, 35, 17, 29, 9, 15],
    3: [16, 23, 25, 44, 40, 7, 22, 30, 37, 38, 18, 20, 32, 11],
    2: [21, 19, 27, 3, 6, 43],
    1: [2, 12, 33, 41, 13],
}


def convert_commodities_to_tips(apps, schema_editor):
    TipSeries = apps.get_model('tips', 'TipSeries')
    Tip = apps.get_model('tips', 'Tip')
    Commodity = apps.get_model('agri', 'Commodity')

    commodities = (Commodity.objects.filter(variant_of=None)
                                    .exclude(agritipsms=None))
    series = []
    tips = []
    for c in commodities.iterator():
        series.append(TipSeries(name=c.name, start_event=c.epoch_description, creator_id=c.creator_id, last_editor_id=c.last_editor_id))

    TipSeries.objects.bulk_create(series)

    for c in commodities.iterator():
        s = TipSeries.objects.get(name=c.name)
        for ct in c.agritipsms_set.iterator():
            td = timedelta(days=14*ct.number)
            if ct.region_id:
                for county_pk in REGIONS_TO_COUNTIES[ct.region_id]:
                    tips.append(Tip(series_id=s.pk, text=ct.text, county_id=county_pk, delay=td, delay_signed=td, creator_id=ct.creator_id, last_editor_id=ct.last_editor_id))
            else:
                tips.append(Tip(series_id=s.pk, text=ct.text, county=None, delay=td, delay_signed=td, creator_id=ct.creator_id, last_editor_id=ct.last_editor_id))

    Tip.objects.bulk_create(tips)


def cleanup_tips(apps, schema_editor):
    TipSeries = apps.get_model('tips', 'TipSeries')
    Tip = apps.get_model('tips', 'Tip')
    TipSeries.objects.all().delete()
    Tip.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ('tips', '0003_auto_20170302_1625'),
    ]

    operations = [
        migrations.RunPython(convert_commodities_to_tips, cleanup_tips)
    ]
