# Generated by Django 2.2.24 on 2021-12-10 20:14

from django.db import migrations


def update_foreignkey_mappings(apps, schema_editor):
    # Map old county foreign keys to new table via county name
    with schema_editor.connection.cursor() as cursor:
        sql = f"UPDATE {schema_editor.connection.schema_name}.tips_tip " \
              f"SET new_county_id = (SELECT id FROM world_border wb " \
              f"WHERE wb.level = 1 AND wb.country = 'Kenya' " \
              f"AND wb.name = (SELECT wc.name FROM world_county wc WHERE wc.id = county_id)) " \
              f"WHERE county_id IS NOT NULL"
        cursor.execute(sql, )


def reverse_foreignkey_mappings(apps, schema_editor):
    # Map county foreign keys to old table via county name
    with schema_editor.connection.cursor() as cursor:
        sql = f"UPDATE {schema_editor.connection.schema_name}.tips_tip " \
              f"SET county_id = (SELECT id FROM world_county wc " \
              f"WHERE wc.name = (SELECT wb.name FROM world_border wb WHERE wb.id = new_county_id)) " \
              f"WHERE new_county_id IS NOT NULL"
        cursor.execute(sql, )


class Migration(migrations.Migration):

    dependencies = [
        ('customers', '0103_remap_border_data'),  # County name fixes were made in this migration
        ('tips', '0019_add_world_borders'),
        ('world', '0009_populate_borders'),
    ]

    operations = [
        migrations.RunPython(update_foreignkey_mappings, reverse_foreignkey_mappings),
    ]
