# Generated by Django 4.1.13 on 2024-12-05 10:41


import os
import subprocess
from django.db import migrations
from django.conf import settings


def populate_border_data(apps, schema_editor):
    db = settings.DATABASES['default']
    db_name = db.get('NAME')
    db_host = db.get('HOST', None)
    db_user = db.get('USER', None)
    db_password = db.get('PASSWORD', None)
    # The world Border data resides in the public schema
    if schema_editor.connection.schema_name == 'public':
        # Then populate the borders database
        boundaries_filename = "borders_incl_zambia.pg_dump.*.split.gz"
        file_path = os.path.join(os.path.dirname(__file__), "../data/", boundaries_filename)

        cmd = []

        cmd.extend(["cat", file_path, "|", "gunzip", "|"])

        if db_password:
            cmd.append(f"PGPASSWORD={db_password}")
        cmd.append("psql")

        if db_host:
            cmd.append(f"-h {db_host}")

        if db_user:
            cmd.append(f"-U {db_user}")

        cmd.append(db_name)

        try:
            subprocess.run(" ".join(cmd), shell=True)
        except subprocess.CalledProcessError as e:
            print(e.returncode)
            print(e.stdout)
            print(e.stderr)
            raise e


class Migration(migrations.Migration):
    atomic = False  # Big data set repopulation, so transactions add a lot of overhead

    dependencies = [
        ('world', '0012_auto_20231130_2259'),
    ]

    operations = [
        migrations.RunPython(populate_border_data, reverse_code=migrations.RunPython.noop),
    ]
