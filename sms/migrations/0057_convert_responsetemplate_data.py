# Generated by Django 3.2.13 on 2022-06-09 12:11

from django.db import migrations
from django.conf import settings

# Import here to extract the Actions inner class, since apps.get_model() won't
from sms.models import SMSResponseTemplate as smsrt


def convert_data(apps, schema_editor):
    """
        Converts:
           - SMSResponseKeyword.response ForeignKey to SMSResponseTemplate.keywords ManyToMany.
           - SMSResponseTemplate.create_task boolean to SMSResponseTemplate.action TextChoice.
    """
    actions = smsrt.Actions
    SMSResponseKeyword = apps.get_model('sms', 'SMSResponseKeyword')
    SMSResponseTemplate = apps.get_model('sms', 'SMSResponseTemplate')
    Border = apps.get_model('world', 'Border')

    # convert from keyword foreignkey to keywords m2m
    for keyword in SMSResponseKeyword.objects.all():
        response_template = keyword.response
        response_template.keywords.add(keyword)

    # convert from 'create_task' boolean to 'action' TextChoice field
    for response_template in SMSResponseTemplate.objects.all():
        if response_template.create_task:
            response_template.action = actions.TASK
            response_template.save()
        elif response_template.name == 'JOIN':
            response_template.action = actions.JOIN
            response_template.save()
        elif response_template.name == 'STOP':
            response_template.action = actions.STOP
            response_template.save()

    countries = Border.objects.filter(level=0)

    # Duplicate and modify protected templates for each country
    for attr in dir(settings):
        if attr.startswith('SMS_') and not attr.startswith('SMS_SENDER_'):
            old_name = getattr(settings, attr)
            if old_name == 'unsupported_region':
                # The unsupported_region template must not be localized
                continue
            t = SMSResponseTemplate.objects.get(name=old_name)
            for c in countries:
                new_name = old_name + f"_{c.name}"
                if c.name == 'Kenya':
                    # Convert the original template for use in Kenya
                    t.name = new_name
                    t.all_countries = False
                    t.protected = True
                    t.save()
                    t.countries.add(c)
                else:
                    # Create copies for other countries
                    new_t = SMSResponseTemplate.objects.create(
                        name=new_name,
                        text=t.text,
                        action=t.action,
                        assign_category=t.assign_category,
                        all_countries=False,
                        protected=True,
                    )
                    new_t.countries.add(c)
                    for k in t.keywords.all():
                        new_t.keywords.add(k)


def reverse_data(apps, schema_editor):
    """
        Reverses:
           - SMSResponseKeyword.response ForeignKey to SMSResponseTemplate.keywords ManyToMany.
           - SMSResponseTemplate.create_task boolean to SMSResponseTemplate.action TextChoice.
    """
    actions = smsrt.Actions
    SMSResponseKeyword = apps.get_model('sms', 'SMSResponseKeyword')
    SMSResponseTemplate = apps.get_model('sms', 'SMSResponseTemplate')
    Border = apps.get_model('world', 'Border')

    for response_template in SMSResponseTemplate.objects.all():
        # Only Kenya template keywords are reversed
        if response_template.all_countries or response_template.countries.filter(name='Kenya'):
            for keyword in response_template.keywords.all():
                keyword.response = response_template
                keyword.save(update_fields=['response'])
            # convert from 'action' boolean to 'create_task' TextChoice field
            if response_template.action == actions.TASK:
                response_template.create_task = True
                response_template.save(update_fields=['create_task'])

    countries = Border.objects.filter(level=0)

    # Duplicate and modify protected templates for each country
    for attr in dir(settings):
        if attr.startswith('SMS_') and not attr.startswith('SMS_SENDER_'):
            old_name = getattr(settings, attr)
            if old_name == 'unsupported_region':
                # The unsupported_region template must not be localized
                continue
            for c in countries:
                new_name = old_name + f"_{c.name}"
                t = SMSResponseTemplate.objects.get(name=new_name)
                if c.name == 'Kenya':
                    # Convert the Kenya version
                    t.name = old_name
                    t.all_countries = True
                    t.protected = True
                    t.save()
                else:
                    # Delete the others
                    t.delete()


class Migration(migrations.Migration):

    dependencies = [
        ('sms', '0056_add_country_and_action_fields'),
        ('world', '0011_remove_world_county_data'),
    ]

    operations = [
        migrations.RunPython(convert_data, reverse_code=reverse_data),
    ]
